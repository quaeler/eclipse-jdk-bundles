<?xml version="1.0" encoding="UTF-8"?>
<project
		xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.lamport.openjdk</groupId>
		<artifactId>jdk</artifactId>
		<version>13.0.1.2</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>org.lamport.openjdk</artifactId>
	<packaging>pom</packaging>

	<properties>
	<!-- to test locally, place files in a local directory
 		<download.url>https://download.java.net/java/GA/jdk11/9/GPL/</download.url>
		<download.url>file:///Users/loki/Downloads/openjdk/</download.url>
		<download.url>file:///Users/loki/Downloads/adopt_openjdk/</download.url>
	-->
	<download.url>https://github.com/AdoptOpenJDK/openjdk13-binaries/releases/download/jdk-13.0.1%2B9/</download.url>

<!--		OpenJDK:
 		<download.file>openjdk-11.0.2_</download.file>
		<download.unzippedFolder>jdk-11.0.2</download.unzippedFolder>

			AdoptOpenJDK:
 -->
		<download.file>OpenJDK13U-jre_x64_</download.file>
		<download.unzippedFolder>jdk-13.0.1+9-jre</download.unzippedFolder>

		<!-- sub-pom MUST override this -->
		<download.filePostfix>os_arch.zip</download.filePostfix>

		<!-- sub-pom MAY override these three -->
		<download.unzippedFolderPostfix></download.unzippedFolderPostfix>
		<download.type>gzip</download.type>
		<jre.folder>jre</jre.folder>
		<additional.jdk.folder></additional.jdk.folder>
	</properties>

	<modules>
		<module>org.lamport.openjdk.linux.x86_64</module>
		<module>org.lamport.openjdk.macosx.x86_64</module>
		<module>org.lamport.openjdk.win32.x86_64</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>target-platform-configuration</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<resolver>p2</resolver>
						<pomDependencies>consider</pomDependencies>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.googlecode.maven-download-plugin</groupId>
					<artifactId>download-maven-plugin</artifactId>
					<version>${maven-download-version}</version>
					<executions>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>wget</goal>
							</goals>
							<configuration>
								<url>${download.url}${download.file}${download.filePostfix}</url>
								<!-- We keep do not unpack with this plugin as we need do more than just unpack, so we might as well
										keep all of that logic in the same configuration below. -->
								<outputDirectory>${project.build.directory}</outputDirectory>
								<outputFileName>${download.file}${download.filePostfix}</outputFileName>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo message="Unzip: ${download.file}${download.filePostfix}"/>
									<ac:if xmlns:ac="antlib:net.sf.antcontrib">
										<equals arg1="${download.type}" arg2="gzip"/>
										<then>
											<untar compression="gzip" dest="${project.build.directory}/downloads/" src="${project.build.directory}/${download.file}${download.filePostfix}"/>
										</then>
										<else>
											<unzip dest="${project.build.directory}/downloads/" src="${project.build.directory}/${download.file}${download.filePostfix}"/>
										</else>
									</ac:if>
									<move file="${project.build.directory}/downloads/${download.unzippedFolder}${download.unzippedFolderPostfix}" tofile="${project.build.directory}/downloads/${jre.folder}"/>
									<ac:if xmlns:ac="antlib:net.sf.antcontrib">
										<isset property="download.additionalContent"/>
										<then>
											<move file="${project.build.directory}/downloads/${download.unzippedFolder}/${download.additionalContent}" tofile="${project.build.directory}/downloads/${download.additionalContent}"/>
										</then>
									</ac:if>
								</target>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>1.0b3</version>
							<exclusions>
								<exclusion>
									<groupId>ant</groupId>
									<artifactId>ant</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<executions>
						<execution>
							<id>process-p2.inf</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/templates</outputDirectory>
								<overwrite>true</overwrite>
								<resources>
									<resource>
										<directory>${project.basedir}/src/main/template</directory>
										<includes>
											<include>**/*</include>
										</includes>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-packaging-plugin</artifactId>
					<configuration>
						<additionalFileSets>
							<!-- include jre -->
							<fileSet>
								<directory>${project.build.directory}/downloads/</directory>
								<includes>
									<include>${jre.folder}/**/*</include>
									<include>${additional.jdk.folder}</include>
								</includes>
								<excludes>
									<!-- bin -->
									<exclude>${jre.folder}/bin/rmid</exclude>
									<exclude>${jre.folder}/bin/rmiregistry</exclude>
									<exclude>${jre.folder}/bin/tnameserv</exclude>
									<exclude>${jre.folder}/bin/keytool</exclude>
									<exclude>${jre.folder}/bin/policytool</exclude>
									<exclude>${jre.folder}/bin/orbd</exclude>
									<exclude>${jre.folder}/bin/servertool</exclude>
									<exclude>${jre.folder}/bin/javaws</exclude>

									<!-- bin [Microsoft Windows] -->
									<exclude>${jre.folder}/bin/rmid.exe</exclude>
									<exclude>${jre.folder}/bin/rmiregistry.exe</exclude>
									<exclude>${jre.folder}/bin/tnameserv.exe</exclude>
									<exclude>${jre.folder}/bin/keytool.exe</exclude>
									<exclude>${jre.folder}/bin/policytool.exe</exclude>
									<exclude>${jre.folder}/bin/orbd.exe</exclude>
									<exclude>${jre.folder}/bin/servertool.exe</exclude>
									<exclude>${jre.folder}/bin/javaws.exe</exclude>
									<exclude>${jre.folder}/bin/kinit.exe</exclude>
									<exclude>${jre.folder}/bin/klist.exe</exclude>
									<exclude>${jre.folder}/bin/ktab.exe</exclude>

									<!-- lib/ext -->
									<exclude>${jre.folder}/lib/ext/cldrdata.jar</exclude>
									<exclude>${jre.folder}/lib/ext/jaccess.jar</exclude>
									<exclude>${jre.folder}/lib/ext/nashorn.jar</exclude>
									<exclude>${jre.folder}/lib/ext/zipfs.jar</exclude>
								</excludes>
							</fileSet>
							<!-- filter p2.inf w/ correct version info -->
							<fileSet>
								<directory>${project.build.directory}/templates/</directory>
								<includes>
									<include>**/*</include>
								</includes>
							</fileSet>
						</additionalFileSets>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
